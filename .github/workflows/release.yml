name: Release

on:
  push:
    tags:
      - 'v*' # Matches tags starting with 'v' (e.g., v1.0.0)
      - '[0-9]+.[0-9]+.[0-9]+' # Matches semantic versioning tags (e.g., 1.0.1)
    branches:
      - main # Trigger on pushes to the main branch
      - feature/assignments_for_Lectures_7_8 # Trigger on pushes to this branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Verify build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found!"
            exit 1
          fi

      - name: Zip build artifacts
        run: zip -r build-artifacts.zip dist/

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          git fetch --prune --tags
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)")
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD)
          fi
          echo "Changelog:"
          echo "$CHANGELOG"
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          files: build-artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}